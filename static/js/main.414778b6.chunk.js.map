{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosItem","todos","map","key","Header","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","uuidv4","handleChange","deleteTodo","filter","addTodoItem","newTodo","TodosList","ReactDOM","render","document","getElementById"],"mappings":"4NA2BeA,E,uKAxBH,IAAD,SAQ0BC,KAAKC,MAAMC,KAApCC,EARD,EAQCA,UAAWC,EARZ,EAQYA,GAAIC,EARhB,EAQgBA,MAEvB,OACE,wBAAIC,UAAU,aACZ,2BACEC,KAAK,WACLC,QAASL,EACTM,SAAU,kBAAM,EAAKR,MAAMS,kBAAkBN,MAE/C,4BAAQO,QAAS,kBAAM,EAAKV,MAAMW,gBAAgBR,KAAlD,UACA,0BAAMS,MAAOV,EAjBM,CACrBW,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAa4B,MAAOZ,Q,GAnBlCa,IAAMC,WCkBdC,E,uKAhBH,IAAD,OACP,OACE,6BACGpB,KAAKC,MAAMoB,MAAMC,KAAI,SAACpB,GAAD,OACpB,kBAAC,EAAD,CACEqB,IAAKrB,EAAKE,GACVF,KAAMA,EACNQ,kBAAmB,EAAKT,MAAMS,kBAC9BE,gBAAiB,EAAKX,MAAMW,0B,GAThBM,IAAMC,WCQfK,EATA,WACb,OACE,gCACE,+CACA,kF,OC6BSC,E,4MAhCbC,MAAQ,CACNrB,MAAO,I,EAGTI,SAAW,SAACkB,GAEV,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAG5CC,aAAe,SAACL,GACdA,EAAEM,iBACF,EAAKhC,MAAMiC,aAAa,EAAKR,MAAMrB,OACnC,EAAKuB,SAAS,CAAEvB,MAAO,M,uDAIvB,OACE,0BAAM8B,SAAUnC,KAAKgC,aAAc1B,UAAU,kBAC3C,2BACEA,UAAU,aACVC,KAAK,OACL6B,YAAY,cACZL,MAAO/B,KAAK0B,MAAMrB,MAClByB,KAAK,QACLrB,SAAUT,KAAKS,WAEjB,2BAAOF,KAAK,SAASwB,MAAM,SAASzB,UAAU,sB,GA3B9BY,IAAMC,W,QCyEfkB,E,4MApEbX,MAAQ,CACNL,MAAO,CACL,CACEjB,GAAIkC,cACJjC,MAAO,gCACPF,WAAW,GAEb,CACEC,GAAIkC,cACJjC,MAAO,kCACPF,WAAW,GAEb,CACEC,GAAIkC,cACJjC,MAAO,wBACPF,WAAW,K,EAKjBoC,aAAe,SAACnC,GACd,EAAKwB,SAAS,CACZP,MAAO,EAAKK,MAAML,MAAMC,KAAI,SAACpB,GAI3B,OAHIA,EAAKE,KAAOA,IACdF,EAAKC,WAAaD,EAAKC,WAElBD,Q,EAKbsC,WAAa,SAACpC,GACZ,EAAKwB,SAAS,CACZP,MAAM,YACD,EAAKK,MAAML,MAAMoB,QAAO,SAACvC,GAC1B,OAAOA,EAAKE,KAAOA,S,EAM3BsC,YAAc,SAACrC,GACb,IAAMsC,EAAU,CACdvC,GAAIkC,cACJjC,MAAOA,EACPF,WAAW,GAGb,EAAKyB,SAAS,CACZP,MAAM,GAAD,mBAAM,EAAKK,MAAML,OAAjB,CAAwBsB,O,uDAK/B,OACE,yBAAKrC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAW4B,aAAclC,KAAK0C,cAC9B,kBAACE,EAAD,CACEvB,MAAOrB,KAAK0B,MAAML,MAClBX,kBAAmBV,KAAKuC,aACxB3B,gBAAiBZ,KAAKwC,kB,GA9DJtB,IAAMC,W,MCDlC0B,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,U","file":"static/js/main.414778b6.chunk.js","sourcesContent":["import React from \"react\";\n\nclass TodoItem extends React.Component {\n  render() {\n    const completedStyle = {\n      fontStyle: \"italic\",\n      color: \"#d35e0f\",\n      opacity: 0.4,\n      textDecoration: \"line-through\",\n    };\n\n    const { completed, id, title } = this.props.todo;\n\n    return (\n      <li className=\"todo-item\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => this.props.handleChangeProps(id)}\n        />\n        <button onClick={() => this.props.deleteTodoProps(id)}>Delete</button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass TodosItem extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.todos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleChangeProps={this.props.handleChangeProps}\n            deleteTodoProps={this.props.deleteTodoProps}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default TodosItem;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Simple Todo App</h1>\n      <p>Please add to-dos item(s) through the input field</p>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nclass InputTodo extends React.Component {\n  state = {\n    title: \"\",\n  };\n\n  onChange = (e) => {\n    // name on the attribute must be the same with the name in the state\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodoProps(this.state.title);\n    this.setState({ title: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <input\n          className=\"input-text\"\n          type=\"text\"\n          placeholder=\"Add todo...\"\n          value={this.state.title}\n          name=\"title\"\n          onChange={this.onChange}\n        />\n        <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\n      </form>\n    );\n  }\n}\n\nexport default InputTodo;\n","import React from \"react\";\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass TodoContainer extends React.Component {\n  state = {\n    todos: [\n      {\n        id: uuidv4(),\n        title: \"Setup development environment\",\n        completed: true,\n      },\n      {\n        id: uuidv4(),\n        title: \"Develop website and add content\",\n        completed: false,\n      },\n      {\n        id: uuidv4(),\n        title: \"Deploy to live server\",\n        completed: false,\n      },\n    ],\n  };\n\n  handleChange = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  deleteTodo = (id) => {\n    this.setState({\n      todos: [\n        ...this.state.todos.filter((todo) => {\n          return todo.id !== id;\n        }),\n      ],\n    });\n  };\n\n  addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false,\n    };\n\n    this.setState({\n      todos: [...this.state.todos, newTodo],\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <InputTodo addTodoProps={this.addTodoItem} />\n        <TodosList\n          todos={this.state.todos}\n          handleChangeProps={this.handleChange}\n          deleteTodoProps={this.deleteTodo}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TodoContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoContainer from \"./components/TodoContainer\";\nimport \"./App.css\";\n\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"));\n"],"sourceRoot":""}